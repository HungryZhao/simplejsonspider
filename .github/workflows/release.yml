name: Release to PyPI and GitHub

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests PyYAML setuptools setuptools_scm wheel

      - name: Run tests
        run: |
          python -m pytest tests/ -v

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools setuptools_scm wheel twine

      - name: Build package
        run: |
          # Clean dist directory first to avoid conflicts
          rm -rf dist/ build/ *.egg-info/
          python -m build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Release ${{ github.ref_name }}
            
            ## Installation
            ```bash
            pip install simplejsonspider==${{ github.ref_name }}
            ```
            
            ## Or install from source
            ```bash
            pip install https://github.com/HungryZhao/simplejsonspider/archive/${{ github.ref }}.tar.gz
            ```
          files: |
            dist/*.whl
            dist/*.tar.gz
          draft: false
          prerelease: false

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload dist/*
